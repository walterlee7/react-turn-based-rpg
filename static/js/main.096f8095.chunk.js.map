{"version":3,"sources":["components/assets/clouds.jpg","components/Game.jsx","components/Intro.jsx","components/Instructions.jsx","components/TitleScreen.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","lineA","LineB","LineC","LineD","textNumber","changeText","bind","assertThisInitialized","textIndex","newIndex","setState","lineB","lineC","lineD","_this2","react_default","a","createElement","className","src","Image","alt","id","onClick","React","Component","Intro","display","ReactDOM","render","src_components_Game","document","getElementById","Fragment","style","startGame","Instructions","window","location","reload","goBack","TitleScreen","components_Intro","components_Instructions","startIntro","displayInstructions","App","components_TitleScreen","Boolean","hostname","match","components_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.096f8095.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clouds.a7375243.jpg\";","import React from 'react';\nimport './Game.css';\nimport Image from './assets/clouds.jpg';\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            lineA: '',\n            LineB: '',\n            LineC: '',\n            LineD: '',\n            textNumber: 0\n        }\n\n        this.changeText = this.changeText.bind(this);\n    }\n\n    componentWillMount() {\n        this.changeText();\n    }\n\n    changeText() {\n        let lineArr = ['You walk towards a decrepit looking house.', 'Lydia:', 'Lydia:'];\n        let lineBrr = ['????:', 'Gwendolyn, I am never wrong. Do you have the necklace?', 'Good, I am going home…'];\n        let lineCrr = ['Is this really a good idea, Grandma Lydia?', 'Gwen:', 'Gwen:'];\n        let lineDrr = ['', 'Yes, I do.  It’s hard to forget a 5-pound metal chain with a huge cross attached to it.', \"Wait, are you not going in with me? Lydia is nowhere to be found…\"];\n\n        let textIndex = this.state.textNumber;\n        let newIndex = textIndex + 1;\n\n        this.setState({\n            lineA: lineArr[textIndex],\n            lineB: lineBrr[textIndex],\n            lineC: lineCrr[textIndex],\n            lineD: lineDrr[textIndex],\n            textNumber: newIndex\n        })\n\n    }\n\n    render() {\n        return (\n            <div className=\"game-container\">\n                <div className=\"main-top\">\n                    <div className=\"mainTopDiv\">\n                        <img className=\"mainImage\" src={Image} alt=\"cloud\"></img>\n                        <div className=\"mainMenuDiv\">\n                            <div id=\"mainMenuContainer\">\n                                <div className=\"mainLocation\">\n                                    Location: House\n                                </div>\n                                <br />\n                                <div className=\"mainFloor\">\n                                    Floor: Front Yard\n                                </div>\n                                <br />\n                                <button className=\"mainMenuButton\">\n                                    Main Menu\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"main-middle\">\n                    <div className=\"mainTextMiddle-container\">\n                        <div className=\"mainTextMiddle\">\n                            {this.state.lineA}\n                        </div>\n                        <br />\n                        <div className=\"mainTextMiddle\">\n                            {this.state.lineB}\n                        </div>\n                        <br />\n                        <div className=\"mainTextMiddle\">\n                            {this.state.lineC}\n                        </div>\n                        <br />\n                        <div className=\"mainTextMiddle\">\n                            {this.state.lineD}\n                        </div>\n                        <br />\n                        <button id=\"textButton\" onClick={() => this.changeText()}>Next</button>\n                        <br />\n                    </div>\n                </div>\n                <div className=\"main-bottom\">\n                    <div className=\"party mainParty1\">\n                        <div className=\"playerInfo-container\">\n                            <div className=\"playerInfo\">\n                                Lv: 100\n                                </div>\n                            <div className=\"playerInfo\">\n                                HP: 999\n                                </div>\n                            <div className=\"playerInfo\">\n                                SP: 100\n                                </div>\n                            <div className=\"playerInfo\">\n                                VP: 100\n                                </div>\n                        </div>\n                        <img id=\"playerImage\" src={Image} alt=\"cloud\" ></img>\n                    </div>\n                    <div className=\"party mainParty2\">\n                        <div className=\"playerInfo-container\">\n                            <div className=\"playerInfo\">\n                                Lv: 100\n                                </div>\n                            <div className=\"playerInfo\">\n                                HP: 999\n                                </div>\n                            <div className=\"playerInfo\">\n                                SP: 100\n                                </div>\n                            <div className=\"playerInfo\">\n                                VP: 100\n                                </div>\n                        </div>\n                        <img id=\"playerImage\" src={Image} alt=\"cloud\" ></img>\n                    </div>\n                    <div className=\"party mainParty3\">\n                        <div className=\"playerInfo-container\">\n                            <div className=\"playerInfo\">\n                                Lv: 100\n                                </div>\n                            <div className=\"playerInfo\">\n                                HP: 999\n                                </div>\n                            <div className=\"playerInfo\">\n                                SP: 100\n                                </div>\n                            <div className=\"playerInfo\">\n                                VP: 100\n                                </div>\n                        </div>\n                        <img id=\"playerImage\" src={Image} alt=\"cloud\" ></img>\n                    </div>\n                    <div className=\"party mainParty4\">\n                        <div className=\"playerInfo-container\">\n                            <div className=\"playerInfo\">\n                                Lv: 100\n                                </div>\n                            <div className=\"playerInfo\">\n                                HP: 999\n                                </div>\n                            <div className=\"playerInfo\">\n                                SP: 100\n                                </div>\n                            <div className=\"playerInfo\">\n                                VP: 100\n                                </div>\n                        </div>\n                        <img id=\"playerImage\" src={Image} alt=\"cloud\" ></img>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './Game';\n\nclass Intro extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            display: 1\n        }\n    }\n\n    startGame() {\n        ReactDOM.render(<Game />, document.getElementById('game-div'));\n\n        this.setState({\n            display: 'none'\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div style={{ display: this.state.display }} className=\"intro-container\">\n                    <div className=\"intro\">\n                        <div>\n                            This is where the introduction will appear.\n                    </div>\n                        <div>\n                            ...\n                    </div>\n                        <div>\n                            ...\n                    </div>\n                        <div>\n                            ...\n                    </div>\n                        <div>\n                            ...\n                    </div>\n                        <div>\n                            ...\n                    </div>\n                        <div>\n                            ...\n                    </div>\n                        <div>\n                            ...\n                    </div>\n                        <button onClick={() => this.startGame()} className=\"intro-next\">Next</button>\n                    </div>\n                </div>\n\n                <div id=\"game-div\"></div>\n            </React.Fragment>\n\n        );\n    }\n}\n\nexport default Intro;","import React from 'react';\n\nclass Instructions extends React.Component {\n\n    goBack() {\n        window.location.reload();\n    }\n\n    render() {\n        return (\n            <div id=\"instructions\">\n                <div className=\"instructions-container\">\n                    <div className=\"instruction-title\">\n                        Instructions\n                    </div>\n                    <div>\n                        <div className=\"instruction-text\">\n                            <div>\n                                This game does not have a save feature or checkpoints.\n                            </div>\n                            <br />\n                            <div>\n                                The game difficulty is set to \"Don't Die\".\n                            </div>\n                            <br />\n                            <div>\n                                If your HP goes to zero, the game ends.\n                            </div>\n                            <br />\n                            <div>\n                                Everything else will be left up to the player to figure out.\n                            </div>\n                            <br />\n                            <div>\n                                I may add checkpoints in the future, but no promises.\n                            </div>\n                            <button onClick={() => this.goBack()} className=\"titlescreen-back\">Back</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Instructions;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Intro from './Intro';\nimport Instructions from './Instructions';\n\nclass TitleScreen extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            display: 1\n        }\n    }\n\n    startIntro() {\n        ReactDOM.render(<Intro />, document.getElementById('intro-div'));\n\n        this.setState({\n            display: 'none'\n        })\n    }\n\n    displayInstructions() {\n        ReactDOM.render(<Instructions />, document.getElementById('intro-div'));\n\n        this.setState({\n            display: 'none'\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div style={{ display: this.state.display }} id=\"title-screen\" >\n                    <div className=\"title\">React Turn Based RPG</div>\n                    <div id=\"start-game\">\n                        <button onClick={() => this.startIntro()} className=\"start-button\">\n                            Start Game\n                    </button>\n                    </div>\n                    <div id=\"instruction-container\">\n                        <button onClick={() => this.displayInstructions()} id=\"instruction-button\">\n                            Instructions\n                    </button>\n                    </div>\n                </div>\n\n                <div id='intro-div' />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default TitleScreen;\n","import React from 'react';\nimport './App.css';\nimport TitleScreen from './TitleScreen';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <TitleScreen />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}