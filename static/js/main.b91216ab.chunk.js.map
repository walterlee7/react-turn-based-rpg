{"version":3,"sources":["components/assets/clouds.jpg","components/assets/firstLocation/front-yard.jpg","components/assets/firstLocation/firstLocation.jsx","components/Game.jsx","components/Intro.jsx","components/Instructions.jsx","components/TitleScreen.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firstLocationImages","id","url","frontYard","Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","lineA","LineB","LineC","LineD","textNumber","location","floorNumber","floor","playerLevelA","playerHitPointsA","playerSpecialPointsA","playerVengancePointsA","playerLevelB","playerHitPointsB","playerSpecialPointsB","playerVengancePointsB","playerLevelC","playerHitPointsC","playerSpecialPointsC","playerVengancePointsC","playerLevelD","playerHitPointsD","playerSpecialPointsD","playerVengancePointsD","changeText","bind","assertThisInitialized","textIndex","newIndex","setState","lineB","lineC","lineD","_this2","console","log","react_default","a","createElement","className","src","alt","onClick","Image","React","Component","Intro","display","ReactDOM","render","src_components_Game","document","getElementById","Fragment","style","startGame","Instructions","window","reload","goBack","TitleScreen","components_Intro","components_Instructions","startIntro","displayInstructions","App","components_TitleScreen","Boolean","hostname","match","components_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b91216ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clouds.a7375243.jpg\";","module.exports = __webpack_public_path__ + \"static/media/front-yard.cdec17e0.jpg\";","import frontYard from './front-yard.jpg';\n\nexport const firstLocationImages = [\n    {\n        id: 1,\n        url: frontYard\n    }\n]","import React from 'react';\nimport './Game.css';\nimport Image from './assets/clouds.jpg';\nimport { firstLocationImages } from './assets/firstLocation/firstLocation';\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            lineA: '',\n            LineB: '',\n            LineC: '',\n            LineD: '',\n            textNumber: 0,\n            location: 'House',\n            floorNumber: '1st',\n            floor: 'Front Yard',\n            playerLevelA: 1,\n            playerHitPointsA: 30,\n            playerSpecialPointsA: 10,\n            playerVengancePointsA: 0,\n            playerLevelB: 0,\n            playerHitPointsB: 0,\n            playerSpecialPointsB: 0,\n            playerVengancePointsB: 0,\n            playerLevelC: 0,\n            playerHitPointsC: 0,\n            playerSpecialPointsC: 0,\n            playerVengancePointsC: 0,\n            playerLevelD: 0,\n            playerHitPointsD: 0,\n            playerSpecialPointsD: 0,\n            playerVengancePointsD: 0,\n        }\n\n        this.changeText = this.changeText.bind(this);\n    }\n\n    componentWillMount() {\n        this.changeText();\n    }\n\n    changeText() {\n        let lineArr = [\n            'You walk towards a decrepit looking house.',\n            'Lydia:',\n            'Lydia:',\n            'Gwen:',\n        ];\n        let lineBrr = [\n            '????: Is this really a good idea, Grandma Lydia?',\n            'Gwendolyn, I am never wrong. Do you have the necklace?',\n            'Good, I am going home…',\n            'I hate it when she does that!!!',\n        ];\n        let lineCrr = [\n            '',\n            'Gwen:',\n            'Gwen:',\n            '(releases a huge sigh)',\n        ];\n        let lineDrr = [\n            '',\n            'Yes, I do. It’s hard to forget a heavy chain with a huge cross attached to it.',\n            \"Wait, are you not going in with me? ...Lydia is nowhere to be found…\",\n            'Okay, I need to figure out what is messed up about this house.',\n        ];\n\n        let textIndex = this.state.textNumber;\n        let newIndex = textIndex + 1;\n\n        this.setState({\n            lineA: lineArr[textIndex],\n            lineB: lineBrr[textIndex],\n            lineC: lineCrr[textIndex],\n            lineD: lineDrr[textIndex],\n            textNumber: newIndex\n        })\n\n    }\n\n    render() {\n\n        console.log(firstLocationImages);\n\n        return (\n            <div className=\"game-container\">\n                <div className=\"main-top\">\n                    <div className=\"mainTopDiv\">\n                        <img className=\"mainImage\" src={firstLocationImages[0].url} alt=\"location\"></img>\n                        <div className=\"mainMenuDiv\">\n                            <div id=\"mainMenuContainer\">\n                                <div className=\"mainLocation\">\n                                    Location: {this.state.location}\n                                </div>\n                                <br />\n                                <div className=\"mainFloor\">\n                                    {this.state.floorNumber} Floor: {this.state.floor}\n                                </div>\n                                <br />\n                                <button className=\"mainMenuButton\">\n                                    Main Menu\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"main-middle\">\n                    <div className=\"mainTextMiddle-container\">\n                        <div className=\"mainTextMiddle\">\n                            {this.state.lineA}\n                        </div>\n                        <br />\n                        <div className=\"mainTextMiddle\">\n                            {this.state.lineB}\n                        </div>\n                        <br />\n                        <div className=\"mainTextMiddle\">\n                            {this.state.lineC}\n                        </div>\n                        <br />\n                        <div className=\"mainTextMiddle\">\n                            {this.state.lineD}\n                        </div>\n                        <br />\n                        <button id=\"textButton\" onClick={() => this.changeText()}>Next</button>\n                        <br />\n                    </div>\n                </div>\n                <div className=\"main-bottom\">\n                    <div className=\"party mainParty1\">\n                        <div className=\"playerInfo-container\">\n                            <div className=\"playerInfo\">\n                                Lv: {this.state.playerLevelA}\n                            </div>\n                            <div className=\"playerInfo\">\n                                HP: {this.state.playerHitPointsA}\n                            </div>\n                            <div className=\"playerInfo\">\n                                SP: {this.state.playerSpecialPointsA}\n                            </div>\n                            <div className=\"playerInfo\">\n                                VP: {this.state.playerVengancePointsA}\n                            </div>\n                        </div>\n                        <img id=\"playerImage\" src={Image} alt=\"cloud\" ></img>\n                    </div>\n                    <div className=\"party mainParty2\">\n                        <div className=\"playerInfo-container\">\n                            <div className=\"playerInfo\">\n                                Lv: {this.state.playerLevelB}\n                            </div>\n                            <div className=\"playerInfo\">\n                                HP: {this.state.playerHitPointsB}\n                            </div>\n                            <div className=\"playerInfo\">\n                                SP: {this.state.playerSpecialPointsB}\n                            </div>\n                            <div className=\"playerInfo\">\n                                VP: {this.state.playerVengancePointsB}\n                            </div>\n                        </div>\n                        <img id=\"playerImage\" src={Image} alt=\"cloud\" ></img>\n                    </div>\n                    <div className=\"party mainParty3\">\n                        <div className=\"playerInfo-container\">\n                            <div className=\"playerInfo\">\n                                Lv: {this.state.playerLevelC}\n                            </div>\n                            <div className=\"playerInfo\">\n                                HP: {this.state.playerHitPointsC}\n                            </div>\n                            <div className=\"playerInfo\">\n                                SP: {this.state.playerSpecialPointsC}\n                            </div>\n                            <div className=\"playerInfo\">\n                                VP: {this.state.playerVengancePointsC}\n                            </div>\n                        </div>\n                        <img id=\"playerImage\" src={Image} alt=\"cloud\" ></img>\n                    </div>\n                    <div className=\"party mainParty4\">\n                        <div className=\"playerInfo-container\">\n                            <div className=\"playerInfo\">\n                                Lv: {this.state.playerLevelD}\n                            </div>\n                            <div className=\"playerInfo\">\n                                HP: {this.state.playerHitPointsD}\n                            </div>\n                            <div className=\"playerInfo\">\n                                SP: {this.state.playerSpecialPointsD}\n                            </div>\n                            <div className=\"playerInfo\">\n                                VP: {this.state.playerVengancePointsD}\n                            </div>\n                        </div>\n                        <img id=\"playerImage\" src={Image} alt=\"cloud\" ></img>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './Game';\n\nclass Intro extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            display: 1\n        }\n    }\n\n    startGame() {\n        ReactDOM.render(<Game />, document.getElementById('game-div'));\n\n        this.setState({\n            display: 'none'\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div style={{ display: this.state.display }} className=\"intro-container\">\n                    <div className=\"intro\">\n                        <div>\n                            This is where the introduction will appear.\n                    </div>\n                        <div>\n                            ...\n                    </div>\n                        <div>\n                            ...\n                    </div>\n                        <div>\n                            ...\n                    </div>\n                        <div>\n                            ...\n                    </div>\n                        <div>\n                            ...\n                    </div>\n                        <div>\n                            ...\n                    </div>\n                        <div>\n                            ...\n                    </div>\n                        <button onClick={() => this.startGame()} className=\"intro-next\">Next</button>\n                    </div>\n                </div>\n\n                <div id=\"game-div\"></div>\n            </React.Fragment>\n\n        );\n    }\n}\n\nexport default Intro;","import React from 'react';\n\nclass Instructions extends React.Component {\n\n    goBack() {\n        window.location.reload();\n    }\n\n    render() {\n        return (\n            <div id=\"instructions\">\n                <div className=\"instructions-container\">\n                    <div className=\"instruction-title\">\n                        Instructions\n                    </div>\n                    <div>\n                        <div className=\"instruction-text\">\n                            <div>\n                                This game does not have a save feature or checkpoints.\n                            </div>\n                            <br />\n                            <div>\n                                The game difficulty is set to \"Don't Die\".\n                            </div>\n                            <br />\n                            <div>\n                                If your HP goes to zero, the game ends.\n                            </div>\n                            <br />\n                            <div>\n                                Everything else will be left up to the player to figure out.\n                            </div>\n                            <br />\n                            <div>\n                                I may add checkpoints in the future, but no promises.\n                            </div>\n                            <button onClick={() => this.goBack()} className=\"titlescreen-back\">Back</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Instructions;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Intro from './Intro';\nimport Instructions from './Instructions';\n\nclass TitleScreen extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            display: 1\n        }\n    }\n\n    startIntro() {\n        ReactDOM.render(<Intro />, document.getElementById('intro-div'));\n\n        this.setState({\n            display: 'none'\n        })\n    }\n\n    displayInstructions() {\n        ReactDOM.render(<Instructions />, document.getElementById('intro-div'));\n\n        this.setState({\n            display: 'none'\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div style={{ display: this.state.display }} id=\"title-screen\" >\n                    <div className=\"title\">React Turn Based RPG</div>\n                    <div id=\"start-game\">\n                        <button onClick={() => this.startIntro()} className=\"start-button\">\n                            Start Game\n                    </button>\n                    </div>\n                    <div id=\"instruction-container\">\n                        <button onClick={() => this.displayInstructions()} id=\"instruction-button\">\n                            Instructions\n                    </button>\n                    </div>\n                </div>\n\n                <div id='intro-div' />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default TitleScreen;\n","import React from 'react';\nimport './App.css';\nimport TitleScreen from './TitleScreen';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <TitleScreen />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}